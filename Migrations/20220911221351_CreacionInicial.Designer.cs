// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnicaPichincha.Data;

#nullable disable

namespace PruebaTecnicaPichincha.Migrations
{
    [DbContext(typeof(PruebaTecnicaPichinchaContext))]
    [Migration("20220911221351_CreacionInicial")]
    partial class CreacionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Constrasenia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("PersonaIdentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaIdentificacion");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.CuentaEntity", b =>
                {
                    b.Property<string>("NumeroCuenta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<decimal>("SaldoInicial")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoCuenta")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("NumeroCuenta");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.MovimientoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CuentaNumeroCuenta")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CuentaNumeroCuenta");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.PersonaEntity", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Identificacion");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.ClienteEntity", b =>
                {
                    b.HasOne("PruebaTecnicaPichincha.Entities.PersonaEntity", "Persona")
                        .WithMany("Clientes")
                        .HasForeignKey("PersonaIdentificacion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.CuentaEntity", b =>
                {
                    b.HasOne("PruebaTecnicaPichincha.Entities.ClienteEntity", "Cliente")
                        .WithMany("Cuentas")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.MovimientoEntity", b =>
                {
                    b.HasOne("PruebaTecnicaPichincha.Entities.CuentaEntity", "Cuenta")
                        .WithMany("Movimientos")
                        .HasForeignKey("CuentaNumeroCuenta");

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.ClienteEntity", b =>
                {
                    b.Navigation("Cuentas");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.CuentaEntity", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("PruebaTecnicaPichincha.Entities.PersonaEntity", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
